<?php
/**
 * MerchantProductWithBuyBoxPrice
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  ChannelEngine\Merchant\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ChannelEngine Merchant API
 *
 * ChannelEngine API for merchants
 *
 * The version of the OpenAPI document: 2.13.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace ChannelEngine\Merchant\ApiClient\Model;

use \ArrayAccess;
use \ChannelEngine\Merchant\ApiClient\ObjectSerializer;

/**
 * MerchantProductWithBuyBoxPrice Class Doc Comment
 *
 * @category Class
 * @package  ChannelEngine\Merchant\ApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class MerchantProductWithBuyBoxPrice implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'MerchantProductWithBuyBoxPrice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sku' => 'string',
        'gtin' => 'string',
        'buyBoxPrice' => 'float',
        'buyBoxPriceInclShipping' => 'float',
        'isMerchantBuyBoxWinner' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'sku' => null,
        'gtin' => null,
        'buyBoxPrice' => 'decimal',
        'buyBoxPriceInclShipping' => 'decimal',
        'isMerchantBuyBoxWinner' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sku' => 'Sku',
        'gtin' => 'Gtin',
        'buyBoxPrice' => 'BuyBoxPrice',
        'buyBoxPriceInclShipping' => 'BuyBoxPriceInclShipping',
        'isMerchantBuyBoxWinner' => 'IsMerchantBuyBoxWinner'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sku' => 'setSku',
        'gtin' => 'setGtin',
        'buyBoxPrice' => 'setBuyBoxPrice',
        'buyBoxPriceInclShipping' => 'setBuyBoxPriceInclShipping',
        'isMerchantBuyBoxWinner' => 'setIsMerchantBuyBoxWinner'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sku' => 'getSku',
        'gtin' => 'getGtin',
        'buyBoxPrice' => 'getBuyBoxPrice',
        'buyBoxPriceInclShipping' => 'getBuyBoxPriceInclShipping',
        'isMerchantBuyBoxWinner' => 'getIsMerchantBuyBoxWinner'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sku'] = $data['sku'] ?? null;
        $this->container['gtin'] = $data['gtin'] ?? null;
        $this->container['buyBoxPrice'] = $data['buyBoxPrice'] ?? null;
        $this->container['buyBoxPriceInclShipping'] = $data['buyBoxPriceInclShipping'] ?? null;
        $this->container['isMerchantBuyBoxWinner'] = $data['isMerchantBuyBoxWinner'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sku
     *
     * @return string|null
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string|null $sku Product SKU number
     *
     * @return self
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets gtin
     *
     * @return string|null
     */
    public function getGtin()
    {
        return $this->container['gtin'];
    }

    /**
     * Sets gtin
     *
     * @param string|null $gtin Product GTIN
     *
     * @return self
     */
    public function setGtin($gtin)
    {
        $this->container['gtin'] = $gtin;

        return $this;
    }

    /**
     * Gets buyBoxPrice
     *
     * @return float|null
     */
    public function getBuyBoxPrice()
    {
        return $this->container['buyBoxPrice'];
    }

    /**
     * Sets buyBoxPrice
     *
     * @param float|null $buyBoxPrice Price of Buy box winner (excl. shipping cost)  Note: not all channels have a separate shipping cost field (e.g. bol.com), so can be the same as BuyBoxPriceInclShipping
     *
     * @return self
     */
    public function setBuyBoxPrice($buyBoxPrice)
    {
        $this->container['buyBoxPrice'] = $buyBoxPrice;

        return $this;
    }

    /**
     * Gets buyBoxPriceInclShipping
     *
     * @return float|null
     */
    public function getBuyBoxPriceInclShipping()
    {
        return $this->container['buyBoxPriceInclShipping'];
    }

    /**
     * Sets buyBoxPriceInclShipping
     *
     * @param float|null $buyBoxPriceInclShipping Price of Buy box winner (incl. shipping cost).  If null, then there is no data or no Buy box winner
     *
     * @return self
     */
    public function setBuyBoxPriceInclShipping($buyBoxPriceInclShipping)
    {
        $this->container['buyBoxPriceInclShipping'] = $buyBoxPriceInclShipping;

        return $this;
    }

    /**
     * Gets isMerchantBuyBoxWinner
     *
     * @return bool|null
     */
    public function getIsMerchantBuyBoxWinner()
    {
        return $this->container['isMerchantBuyBoxWinner'];
    }

    /**
     * Sets isMerchantBuyBoxWinner
     *
     * @param bool|null $isMerchantBuyBoxWinner Are you the Buy box winner or not?
     *
     * @return self
     */
    public function setIsMerchantBuyBoxWinner($isMerchantBuyBoxWinner)
    {
        $this->container['isMerchantBuyBoxWinner'] = $isMerchantBuyBoxWinner;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


